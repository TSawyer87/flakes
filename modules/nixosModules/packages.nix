{ pkgs, inputs, rust-overlay, system, ... }: {
  environment.systemPackages = with pkgs; [
    inputs.nix-inspect.packages.${pkgs.system}.default
    # vim
    taplo # toml formatter and lsp
    #cargo-watch
    #cargo-spellcheck
    swayfx.packages.${system}.default
    wlr-randr
    evcxr # rust repl
    rustup
    vulkan-loader
    vulkan-validation-layers
    vulkan-tools
    amdvlk
    profile-sync-daemon
    wget
    killall
    eza
    git
    cmatrix
    lolcat
    efibootmgr
    htop
    pokemon-colorscripts-mac
    libvirt
    lxqt.lxqt-policykit
    lm_sensors
    unzip
    unrar
    libnotify
    v4l-utils
    ydotool
    duf
    ncdu
    pciutils
    ffmpeg
    comma
    socat
    cowsay
    ripgrep
    lshw
    bat
    pkg-config
    nwg-look
    meson
    ninja
    virt-viewer # graphical consol client for qemu
    appimage-run
    markdownlint-cli
    markdownlint-cli2
    marksman
    markdown-oxide
    inxi
    nh
    nixfmt-rfc-style
    stdenv
    file-roller
    imv
    mpv
    gimp
    tree
    cachix
    #spotify
    #neovide
    dconf2nix
    greetd.tuigreet
    jq
    nodePackages.prettier
    prettierd
    ruff
    lazygit
    shfmt
    shellcheck
    nixd
    nodejs_22
    nil
    lua-language-server
    bash-language-server
    stylua
    zig_0_12
    unipicker
    nvtopPackages.amd
    dmidecode
    _7zz
    p7zip
    alsa-utils
    nix-diff
    manix
    linuxKernel.packages.linux_zen.cpupower
    tradingview
    dconf-editor
    rose-pine-cursor
    pfetch-rs
    fwupd
    openssl
    pkg-config
    gccgo14
    go
    gomuks
    olm
    transmission_4-gtk
  ];
}
